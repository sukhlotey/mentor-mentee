[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-04-21 09:39:21.460045",
  "module": null,
  "name": "Helpdesk",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "HD Ticket",
  "script": "if (doc.custom_category == \"Academic Query\"):\n    doc.agent_group = \"Academic Query\"\n\nelif (doc.custom_category == \"IT Support\"):\n    doc.agent_group = \"IT Support\"\n    \nelif (doc.custom_category == \"Fee Issue\"):\n    doc.agent_group = \"Fee Issue\"\n    \nelif (doc.custom_category == \"Admission Query\"):\n    doc.agent_group = \"Admission Query\"\n\nelse: \n    doc.agent_group = \"Other\"",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": "*/10 * * * *",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "Cron",
  "modified": "2025-04-23 16:10:34.598974",
  "module": null,
  "name": "Scheduled Job",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "from frappe.utils import now_datetime, get_datetime\nfrom frappe import db\nfrom datetime import timedelta\n\ndef reassign_unresponded_tickets():\n    # Fetch open tickets with SLA and no first response\n    tickets = db.get_list(\n        \"HD Ticket\",\n        filters={\n            \"status\": [\"in\", [\"Open\", \"Replied\"]],\n            \"sla\": [\"!=\", \"\"],\n            \"first_responded_on\": [\"is\", \"not set\"],\n            \"agent_group\": [\"!=\", \"Other\"]  # Skip tickets already in Other team\n        },\n        fields=[\"name\", \"sla\", \"priority\", \"agent_group\", \"creation\"]\n    )\n\n    for ticket in tickets:\n        # Get first response time from SLA for the ticket's priority\n        first_response_time = db.get_value(\n            \"Service Level Priority\",\n            {\"parent\": ticket.sla, \"priority\": ticket.priority},\n            \"first_response_time\"\n        )\n        if not first_response_time:\n            continue\n\n        # Calculate first response deadline\n        first_response_deadline = get_datetime(ticket.creation) + timedelta(hours=first_response_time)\n        \n        # Check if SLA is violated\n        if now_datetime() > first_response_deadline:\n            # Reassign to \"Other\" team\n            db.set_value(\"HD Ticket\", ticket.name, {\n                \"agent_group\": \"Other\",\n                \"assigned_to\": None,  # Clear current agent\n                \"modified\": now_datetime(),\n                \"modified_by\": \"Administrator\"\n            })\n            \n            # Log reassignment in activity timeline\n            frappe.get_doc({\n                \"doctype\": \"Comment\",\n                \"comment_type\": \"Info\",\n                \"reference_doctype\": \"HD Ticket\",\n                \"reference_name\": ticket.name,\n                \"content\": f\"Ticket reassigned to team Other due to SLA violation (Priority: {ticket.priority})\"\n            }).insert()\n            \n            # Notify the Other team\n            frappe.publish_realtime(\n                \"ticket_reassigned\",\n                message={\n                    \"ticket_id\": ticket.name,\n                    \"new_team\": \"Other\",\n                    \"reason\": f\"SLA violation - No response within first response time ({ticket.priority})\"\n                },\n                user=None\n            )",
  "script_type": "Scheduler Event"
 }
]